Exercises

1. In your own words, explain what clean code is and why it is important.
The first reason is that we do not write code for ourselves or the machines, we write it for other people, other developers or even customers who might need to change things later on, also if we ourselves need to refactor or modify something later on if the code is jumbled, hard to read, or confusing we will had by then forgotten what we attempted originally and take too long to fogure it out and fix it. Also debugging it will be terribly tiresome if not sometimes bordering impossible.


2. Read this article about Toyota and their use of bad code. Although you may not yet understand all of the topics discussed, think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.

Medical services, not only for record keeping of patient's history and reactions to medications, but in hospital during treatment, charts and dosages, if a calculation in a code is wrong with the current level of trust on the correctnes of computations i medical equipment one mistake can be extreme dangerous or fatal 

3. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

    FUNCTION do(x, y)                      // Creating a new function
        IF y = "F" THEN                    // Check if y is equal "F"
            SET z to (xâˆ’32) * (5/9)        // Formula to convert degrees fahrenheit to celsius
            PRINT z                        // Print result
        ELSE IF y = "C" THEN               // If y not equal to "F", check if equal to "C"
            SET z to x * 1.8000 + 32.00    // Formula to convert degrees celsius to fahrenheit
            PRINT z                        // Print result
        END IF
    END FUNCTION
  

  No, is not clean code. there is too many notes and explanations as to what the code is doing.  also the variables are too ambiguous and unnecesary
       
        //convert fahrenheit to celsius and celsius to fahrenheit
    FUNCTION do (temperature)
         create variable result;
        IF temperature = "fahrenheit" THEN
            SET result to (temperature-32) * (5/9)
        ELSE IF  temperature = "celsius" THEN
            SET result to temperature * 1.8000 + 32.00
        END IF
        PRINT result
    END FUNCTION
 
4. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.


FUNCTION calcPercent(sum, total)
 IF NOT(total = 0) THEN
     SET percentage to sum / total * 100
 ELSE
   PRINT "Sorry, cannot divide by 0"
 END IF

 PRINT percentage
END FUNCTION

  Yes is clean code. 
5. Using pseudocode, refactor the code for the following examples using the principles you have learned in this checkpoint.

    a. The following function prints the subtotal of a customer's transaction and receives

            FUNCTION checkOutCustomer(subTotal, discountRate, paymentType)
                save + subTotal * discountRate + (subTotal * tax) to total   //calculates total payment
                PRINT "Your total due is: " total"
                
                IF paymentType = 'CASH' THEN
                    CALL getPayment RETURNING amount
                    PRINT "Change due: " + amount - total
               
                ELSE IF paymentType = 'CREDIT CARD' THEN
                    CALL getPayment RETURNING amount
                    PRINT "Your credit card has been charged: " total"
                
                END IF
            END FUNCTION



    b. The following function checks out a book if there are no issues with the guest's account.

	IF (guest.accountActive AND NOT guest.hasOverdueBooks AND guest.outstandingFees = 0) THEN 
      		APPEND book to guest.books 
      		SET book.status to "Checked Out" 
      		PRINT "Your books have been issued."
      
    	ELSE 
      		PRINT "Unable to check out book."
      
      	END IF 
    END FUNCTION


    c. The following class is a code snippet that should support the transactions a customer can perform at an ATM.

CLASS BankAccount

        FUNCTION displayBalance
            PRINT balance
        END FUNCTION


        FUNCTION deposit(amount)
            SET balance to balance + amount
        END FUNCTION


        FUNCTION withdraw(amount)
            IF balance > amount THEN
                SET balance to balance - amount
            END IF
        END FUNCTION
END
CLASS OfferServices
 
    FUNCTION creditCardOffer
        IF NOT(customer.hasCreditCard) THEN
            CALL offerCreditCard
        END If
    END FUNCTION


    FUNCTION checkStatus
        IF NOT(customer.hasCheckingAccount) THEN
            CALL offerCheckingAccount
        END
    END FUNCTION


 ....
 ....
 ....

END




Programming Questions

    You may do the following problems in any language of your choice. Use the clean code principles taught in this section while writing the code.

6. Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum.

    Example:
        [10,1,4,6,1,1,2] returns 5 because the square root of 25 is 5.

        [1,1] returns 2 because 2 is not a perfect square.
        
        The square root of 2 is approximately 1.414213562373095.


    function isSquare(numbers){
        var sum = arr.reduce((a,b)=>a+b);
        var squareRoot = Math.sqrt(sum);
        return squareRoot % 1 === 0?squareRoot:sum;
    }


7. Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

    function duplicateElements(arr){
        arr = arr.sort();
        for(var i = 0; i < arr.length; i++){
            return arr[i+1] === arr[i];
        } 
    }

Extra Credit
8. Anagram An anagram is a word, phrase, or name formed by rearranging the letters of another word. For example, spar can be formed from rasp. Given two strings, stringOne and stringTwo, determine if stringOne is an anagram of stringTwo. Assume that the strings contain only lowercase letters and do not worry about case-sensitivity. Hint: Your first task will be to convert the strings to arrays.

    function isAnagram(stringOne, stringTwo){
        stringOne = stringOne.split('').sort().join('');
        stringTwo = stringTwo.split('').sort().join('');
        return stringOne===stringTwo;
    }